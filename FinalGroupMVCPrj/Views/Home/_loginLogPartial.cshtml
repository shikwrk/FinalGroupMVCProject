    @if (TempData["login"]?.ToString() == "登入成功")
{
    <script src="https://cdn.jsdelivr.net/npm/platform@1.3.6/platform.js"></script>
    <script>
        let toSavePlatformInfo = "";
        let toSaveGeoInfo1 = "";
        let toSaveGeoInfo2 = "";
        let toSaveIPInfo = "";
        ( async function loginlog() { 
        // 使用platform.js解析瀏覽器和OS系統資訊
        //取得內容範例：Chrome 122.0.0.0 on Windows 10 64-bit
        const userAgent = navigator.userAgent;
        console.log(userAgent);
        const platformInfo = platform.parse();
        toSavePlatformInfo = platformInfo.description;
        try {
            //等待方法執行完
            await Promise.all([
                fetchLocationInfo(),
                fetchIPInfo()
            ]);
            let toSentGeoInfo = "";
            if (toSaveGeoInfo1 === "") {
                toSentGeoInfo = toSaveGeoInfo2;
            } else {
                toSentGeoInfo = toSaveGeoInfo1;
            }
            (async () => {
                const response = await fetch(`@Url.Content("~/Member/SaveLoginLog")?ip=${toSaveIPInfo}&geoInfo=${toSentGeoInfo}&browerNOs=${toSavePlatformInfo}`, {
                    method: 'POST'
                })

            })();
        } catch (err) {
            console.log(err)
        }
        })()
        // 取得地理位置資訊
        async function fetchLocationInfo() {
            return new Promise((resolve, reject) => {
                if ('geolocation' in navigator) {
                    navigator.geolocation.getCurrentPosition(
                        successGeoCallback,
                        errorGeoCallback,
                        { enableHighAccuracy: true }
                    );
                } else {
                    reject('不支援 Geolocation API');
                }

                function successGeoCallback(position) {
                    const latitude = position.coords.latitude;
                    const longitude = position.coords.longitude;

                    // 網站資訊https://nominatim.org/release-docs/develop/api/Reverse/
                    const apiUrl = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=12`;

                    fetch(apiUrl)
                        .then(response => response.json())
                        .then(data => {
                            console.log(data);
                            const address = data.address;
                            toSaveGeoInfo1 = `${address.country}/${address.city}/${address.suburb}`;
                            console.log(toSaveGeoInfo1);

                            // 在此處呼叫 resolve()
                            resolve();
                        })
                        .catch(error => {
                            console.error('錯誤：', error);
                            // 如果有錯誤，也應該在此處呼叫 resolve()
                            resolve();
                        });
                }


                function errorGeoCallback(error) {
                    // 获取位置信息失败
                    switch (error.code) {
                        case error.PERMISSION_DENIED:
                            console.log('使用者拒絕提供位置資訊');
                            break;
                        case error.POSITION_UNAVAILABLE:
                            console.log('無法取得使用者位置');
                            break;
                        case error.TIMEOUT:
                            console.log('取得位置逾時');
                            break;
                        case error.UNKNOWN_ERROR:
                            console.log('發生未知錯誤');
                            break;
                    }
                    resolve();
                }
            });
        }

        // 取得 IP 資訊
        async function fetchIPInfo() {
            return new Promise((resolve, reject) => {
                fetch('https://ipinfo.io/json')
                    .then(response => response.json())
                    .then(data => {
                        // 其他邏輯...
                        toSaveIPInfo = data.ip
                        toSaveGeoInfo2 = `${data.country}/${data.region}/${data.city}`
                        console.log(toSaveIPInfo)
                        console.log(toSaveGeoInfo2)
                        resolve();
                    })
                    .catch(error => {
                        console.error('取得 IP 錯誤', error);
                        reject(error);
                    });
            });
        }
</script>
}
