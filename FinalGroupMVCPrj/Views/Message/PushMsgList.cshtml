@model PushMessageViewModel
@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="pagetitle">
    <h1>推播管理</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="index.html">管理員後台</a></li>
            <li class="breadcrumb-item">推播管理</li>
            <li class="breadcrumb-item active">推播清單</li>
        </ol>
    </nav>
</div>

<section class="section">
    <div class="row">
        <div class="col-lg-12">
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">推播清單</h5>
                <div>
                    <!--篩選資料區-->
                    <div class="d-flex align-items-center gap-4 mb-3">
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createPMsgModal"> 新建推播</button>
                        <div class="d-flex align-items-center gap-2 ">
                            <label for="inputDate" class="">推播日期</label>
                            <div class="">
                                <input id="startDate" type="date" class="form-control">
                            </div>
                            <span>~</span>
                            <div class="">
                                <input id="endDate" type="date" class="form-control">
                            </div>
                        </div>
                            <label class="">推播類型</label>
                        <div class="d-flex align-items-center" style="width:12%">
                            <select id="selectPushType" class="form-select" aria-label="Default select example">
                                <option value="全部" selected>全部</option>
                                <option value="最新消息">最新消息</option>
                                <option value="會員優惠">會員優惠</option>
                                <option value="課程公告">課程公告</option>
                                <option value="活動促銷">活動促銷</option>
                            </select>
                        </div>
                    </div>

                    <div>
                        <!-- 表格-->
                        <table id="pushMsgListTable" class="datatable row-border stripe hover">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(pm => pm.FPushMessageId)</th>
                                    <th>@Html.DisplayNameFor(m => m.FPushType)</th>
                                    <th>@Html.DisplayNameFor(m => m.FPushStartDate)</th>
                                    <th>@Html.DisplayNameFor(m => m.FPushContent)</th>
                                    <th>@Html.DisplayNameFor(m => m.FPushImagePath)</th>
                                    <th>@Html.DisplayNameFor(m => m.FPushCreatedTime)</th>
                                    <th>@Html.DisplayNameFor(m => m.FPushLastUpdatedTime)</th>
                                    <th>操作</th>
                                    <th>推播</th>
                                </tr>
                            </thead>
                        </table>
                        <!--結束表格 -->
                    </div>

                </div>
            </div>

        </div>
    </div>
</section>

<!-- 彈跳視窗 -->
<partial name="_BCreatePushMsgPartial" model="new CreatePushMsgViewModel()" />

<div class="modal fade" id="pushMsgModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-md modal-dialog-scrollable">
        <div class="modal-content p-3 ">
            <div class="d-flex justify-content-between">
                <!-- 最上排會員資訊&關閉 -->
                <div class="d-flex gap-2  mb-3 mt-2 fw-bold" style="font-size:150%">
                    推播訊息
                </div>
                <button type="button" class="btn" data-bs-dismiss="modal" aria-label="Close"><i class="fa-solid fa-x"></i></button>
            </div>
            <div class="d-flex flex-column">

                <div class="mb-3">
                    <label for="genderSelect" class="form-label">性別：</label>
                    <select class="form-select" id="genderSelect">
                        <option value="全部">全部</option>
                        <option value="男性">男性</option>
                        <option value="女性">女性</option>
                    </select>
                </div>

                <div class="row mb-3">
                    <div class="col">
                        <label for="minAgeInput" class="form-label">最小年齡：</label>
                        <input type="number" class="form-control" id="minAgeInput" placeholder="最小年齡" min="1" max="150" value="1">
                    </div>
                    <div class="col">
                        <label for="maxAgeInput" class="form-label">最大年齡：</label>
                        <input type="number" class="form-control" id="maxAgeInput" placeholder="最大年齡" min="1" max="150" value="100">
                    </div>
                </div>
                <!--全選-->
                <div class="mb-3">
                    <button type="button" class="btn btn-primary btn-sm mb-2" id="selectAllBtn" onclick="selectAllCheckboxes()">全部選擇</button>
                    <button type="button" class="btn btn-secondary btn-sm mb-2" id="cancelAllBtn" onclick="unselectAllCheckboxes()">取消選取</button>
                    <button type="submit" class="btn btn-primary btn-sm mb-2" id="searchBtn" onclick="searchMembers()">搜尋</button>
                    <button type="button" class="btn btn-secondary btn-sm mb-2" id="resetBtn" onclick="resetSearch()">重置條件</button>
                </div>
                <div class="mb-3">
                    <label for="pushDelaySelect" class="form-label">選擇推播時間：</label>
                    <select class="form-select" id="pushDelaySelect">
                        <option value="0">立即推播</option>
                        <option value="10">10秒後</option>
                        <option value="300">5 分鐘後</option>
                        <option value="600">10 分鐘後</option>
                        <option value="1800">30 分鐘後</option>
                        <option value="3600">1 小時後</option>
                        <option value="7200">2 小時後</option>
                        <option value="14400">4 小時後</option>
                        <option value="28800">8 小時後</option>
                        <option value="86400">1 天後</option>
                    </select>
                </div>

                <div id="addPushMsgPartial"></div>
            </div>
        </div>
    </div>

    @section Scripts {
        @*     <script src="~/js/Benscript/PushMessage.js" asp-append-version="true"></script> *@
        <script src="~/js/BenScript/signalr.js">  </script>

        <!--DataTable的部分-->
        <script src="
https://cdn.jsdelivr.net/npm/moment@2.30.1/moment.min.js
                                                            ">//格式化日期的插件</script>

        <style>
            #pushMsgListTable th {
                text-align: center;
            }

            #pushMsgListTable td {
                text-align: center;
            }

            /*上傳圖片部分*/

            #previewImage {
                width: 240px;
                height: 240px;
                transition: filter 0.3s;
            }

                #previewImage:hover {
                    filter: brightness(70%);
                }

            #uploadText {
                display: none;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background-color: rgba(0, 0, 0, 0.5);
                color: white;
                padding: 10px 20px;
                border-radius: 5px;
                cursor: pointer;
                transition: opacity 0.3s;
            }

            #previewImage:hover + #uploadText {
                display: block;
            }
        </style>
        <script>
            let dataTable; // 這段要記得加，先宣告datatable的變數
            $(document).ready(function () {
                loadDataTable();

                //新建推播
                $('#createPM-btn').on('click', function () {
                    let formData = new FormData();

                    const pushType = $('#FPushType').val();
                    formData.append('FPushType', pushType);

                    const pushContent = $('#FPushContent').val().trim();
                    formData.append('FPushContent', pushContent);

                    const pushImage = $('#FPushImagePath')[0].files[0];
                    formData.append('FPushImagePath', pushImage);

                    if (pushContent === '') {
                        $('#FPushContentError').text('必須填寫推播內容');
                        return;
                    } else {
                        $('#FPushContentError').text('');
                    }
                    if (pushImage === '') {
                        $('#FPushImageError').text('必須上傳圖片');
                        return;
                    } else {
                        $('#FPushImageError').text('');
                    }

                    $('#FPushImagePath').on('change', function () {
                        var file = this.files[0];
                        if (file) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                $('#previewImage').attr('src', e.target.result);
                            }
                            reader.readAsDataURL(file);
                        }
                    });

                    $.ajax({
                        url: '/Message/CreatePushMsg',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            console.log(response);

                            Swal.fire({
                                icon: 'success',
                                title: '推播訊息新增成功',
                                timer: 1500,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: '確認'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    $('#createPMsgModal').modal('hide');
                                    dataTable.ajax.reload(); 
                                }
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);

                            if (xhr.responseText.includes('FPushContent')) {
                                Swal.fire({
                                    icon: 'error',
                                    title: '必須填寫推播內容',
                                    timer: 1500,
                                    confirmButtonText: '確認'
                                });
                            } else if (xhr.responseText.includes('FPushImagePath')) {
                                Swal.fire({
                                    icon: 'error',
                                    title: '必須上傳圖片',
                                    timer: 1500,
                                    confirmButtonText: '確認'
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: '出現錯誤',
                                    text: '內容格式錯誤',
                                    timer: 1500,
                                    confirmButtonText: '確認'
                                });
                            }
                        }
                    });
                });
            });

            function loadDataTable() {
                // html 欄位跟 ajax 的欄位務必相同
                dataTable = $('#pushMsgListTable').DataTable({
                    "ajax": { url: '/Message/ListDataJson' },
                    "columns": [
                        { data: 'fPushMessageId', "width": "6%" },
                        { data: 'fPushType', "width": "8%" },
                        {
                            data: 'fPushStartDate', "width": "12%", "render": function (data) {
                                return moment(data).format('YYYY-MM-DD HH:mm');
                            }
                        },
                        { data: 'fPushContent', "width": "15%" },
                        {
                            data: 'fPushImagePath', "width": "15%", "render": function (data) {
                                if (data !== null && data !== "") {
                                    let imageUrl = 'data:image/jpeg;base64,' + data;
                                    return `<img src="${imageUrl}" title="Image" style="width:100px;height:80px" class="cursor-pointer rounded-b" />`;
                                } else {
                                    return `<img src="@Url.Content("~/images/no-image.jpg")" title="尚無內容" style="width:100px;height:80px " class="cursor-pointer rounded-b" />`;
                                }
                            }
                        },
                        {
                            data: 'fPushCreatedTime', "width": "12%", "render": function (data) {
                                return moment(data).format('YYYY-MM-DD HH:mm');
                            }
                        },
                        {
                            data: 'fPushLastUpdatedTime', "width": "12%", "render": function (data) {
                                return moment(data).format('YYYY-MM-DD HH:mm');
                            }
                        },
                        {
                            // 這段是新增及刪除按鈕 ， 刪除用到onclick 事件，觸發下方的Delete
                            data: 'fPushMessageId',
                            "render": function (data) {
                                return `<div class="" role="">
                                                                                                                                                                                    <button  fPushMessageId=${data}" class="btn btn-primary mx-2" data-bs-toggle="modal" data-bs-target="#editPMsgModal"><i class="fa-solid fa-gear"></i></button>
                                                                                                                                                                        </div>`
                            },
                            "width": "5%"
                        },
                        {
                            // 推播按鈕
                            data: 'fPushMessageId',
                            "render": function (data) {
                                return `<div class="" role="">
                                                                                                                                                            <button  fPushMessageId=${data}" onclick="loadPushModalData(${data})" class="btn btn-primary mx-2" data-bs-toggle="modal" data-bs-target="#pushMsgModal"><i class="fa-solid fa-bell"></i></button>
                                                                                                                                                      </div>`
                            },
                            "width": "5%"
                        },
                    ], "columnDefs": [
                        {
                            "targets": [2],
                            "visible": false,
                        },
                        {
                            "targets": [6],
                            "visible": false,
                        }
                    ],
                    language: {
                        url: "https://cdn.datatables.net/plug-ins/1.13.7/i18n/zh-HANT.json"
                    },
                    order: [[0, 'dsc']],
                });

                $('#selectPushType').on('change', function () {
                    const selectedType = $(this).val();

                    if (selectedType === '全部') {
                        dataTable.search('').columns().search('').draw();
                    } else {
                        dataTable.column(1).search(selectedType).draw();
                    }
                });

            }

            async function loadPushModalData(pushId) {

                const modal = document.querySelector('#addPushMsgPartial');

                try {
                    const url = "/Message/GetPushMsgList?PutmsgId=" + pushId;
                    const response = await fetch(url, {
                        method: "GET"
                    });

                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    const data = await response.text();

                    modal.innerHTML = data;

                } catch (error) {
                    console.error('發生錯誤：', error);
                }
            }
        </script>
        <!---->
        <!--清空建立Modal內的資料-->
        <script>
            $(document).ready(function () {
                $('#createPMsgModal').on('hidden.bs.modal', function () {
                    // 清除表單中的值
                    $('#createPushMsg').trigger("reset");
                    $('#previewImage').attr('src', '/images/no-image.jpg');
                });
            });
        </script>

        <!--圖片顯示切換-->
        <script>
            document.getElementById('FPushImagePath').addEventListener('change', function (event) {
                previewImage(event);
            });

            function previewImage(event) {
                const input = event.target;
                const reader = new FileReader();
                reader.onload = function () {
                    const dataURL = reader.result;
                    const img = document.getElementById('previewImage');
                    img.src = dataURL;
                };
                reader.readAsDataURL(input.files[0]);
            }

            //推播內的按鍵設定
            function selectAllCheckboxes() {

                const checkboxes = document.querySelectorAll('.memberCheckbox');

                checkboxes.forEach(function (checkbox) {
                    checkbox.checked = true;
                });
            }

            function unselectAllCheckboxes() {

                const checkboxes = document.querySelectorAll('.memberCheckbox');

                checkboxes.forEach(function (checkbox) {
                    checkbox.checked = false;
                });
            }

            function searchMembers() {
                const genderSelect = document.getElementById('genderSelect');
                const minAgeInput = document.getElementById('minAgeInput');
                const maxAgeInput = document.getElementById('maxAgeInput');

                const selectedGender = genderSelect.value;
                const minAge = minAgeInput.value;
                const maxAge = maxAgeInput.value;

                const memberRows = document.querySelectorAll('.memberRow');
                memberRows.forEach(function (row) {
                    const gender = row.getAttribute('data-gender');
                    const age = parseInt(row.getAttribute('data-age'));

                    const genderMatch = (selectedGender === '全部' || gender === selectedGender);
                    const ageMatch = (age >= parseInt(minAge) && age <= parseInt(maxAge));

                    if (genderMatch && ageMatch) {
                        row.style.display = 'table-row';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }

            function resetSearch() {
                const genderSelect = document.getElementById('genderSelect');
                const minAgeInput = document.getElementById('minAgeInput');
                const maxAgeInput = document.getElementById('maxAgeInput');

                genderSelect.value = '全部';
                minAgeInput.value = '1';
                maxAgeInput.value = '100';

                const memberRows = document.querySelectorAll('.memberRow');
                memberRows.forEach(function (row) {
                    row.style.display = 'table-row';
                });
            }
        </script>

        <!--SignalR部分-->
        <script>
            let connection;
            let adminId = '1';

            document.addEventListener('DOMContentLoaded', async () => {

                connection = new signalR.HubConnectionBuilder().withUrl("/pushMsgHub").build();

                connection.start().then(function () {
                    connection.invoke("SendAdminId", adminId);
                }).then(function () {
                    console.log("Admin ID sent to server");
                }).catch(function (error) {
                    console.error("Error sending teacher ID: ", error);
                });


                connection.on("ConnectionEstablished", function (message) {
                    console.log(message);

                });

            });


            async function sendPushMessage() {
                const checkboxes = document.querySelectorAll('.memberCheckbox:checked');
                const selectedMembers = [];

                const pushMsgIdElement = document.querySelector('div[PutmsgId]');
                const pushMsgId = parseInt(pushMsgIdElement.getAttribute('PutmsgId'));

                const selectElement = document.querySelector('#pushDelaySelect');
                const pushDelay = parseInt(selectElement.value);


                if (checkboxes.length === 0) {
                    Swal.fire({
                        icon: 'error',
                        title: '請選擇要推送的會員',
                        text: '請至少選擇一位會員進行推送',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: '確認'
                    });
                    return;
                }


                const minAgeInput = document.querySelector('#minAgeInput').value;
                if (minAgeInput.trim() === '') {
                    Swal.fire({
                        icon: 'error',
                        title: '請輸入最小年齡',
                        text: '請輸入要推送的會員的最小年齡',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: '確認'
                    });
                    return;
                }

                const maxAgeInput = document.querySelector('#maxAgeInput').value;
                if (maxAgeInput.trim() === '') {
                    Swal.fire({
                        icon: 'error',
                        title: '請輸入最大年齡',
                        text: '請輸入要推送的會員的最大年齡',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: '確認'
                    });
                    return;
                }

                const minAge = parseInt(minAgeInput);
                const maxAge = parseInt(maxAgeInput);

                if (minAge >= maxAge) {
                    Swal.fire({
                        icon: 'error',
                        title: '年齡範圍錯誤',
                        text: '最小年齡必須小於最大年齡',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: '確認'
                    });
                    return;
                }

                checkboxes.forEach(function (checkbox) {
                    selectedMembers.push(parseInt(checkbox.value));
                });

                try {
                    const url = '/Message/CreatePush';
                    const data = {
                        pushMsgId: pushMsgId,
                        selectedMembers: selectedMembers,
                        pushDelay: pushDelay
                    };
                    const jsonData = JSON.stringify(data);
                    const response = await fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: jsonData
                    });
                    Swal.fire({
                        icon: 'success',
                        title: '推播訊息已成功發送',
                        text: '已成功推播給所選會員！',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: '確認'
                    });
                    if (response.ok) {
                        // 成功存到資料庫後開始處理推播
                     await   connection.invoke("SendPushMsg", selectedMembers, pushDelay.toString());
                        // 使用 SweetAlert 提示成功推送

                    } else {
                        console.error('Error:', response.statusText);
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            }




        </script>

        <script>

            function demoMsg(demoNumber) {
                let message = "立即加入我們的ETF課程！掌握投資精髓，發現無限潛力！限時優惠等你來享！";
                switch (demoNumber) {
                    case 1:
                        message = "立即加入我們的ETF課程！掌握投資精髓，發現無限潛力！限時優惠等你來享！";
                        break;
       
                    default:
                        message = "沒有選擇有效的 Demo 訊息。";
                        break;
                }
                document.getElementById("FPushContent").value = message;
            }
        </script>
    }
